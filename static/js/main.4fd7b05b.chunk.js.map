{"version":3,"sources":["Components/SearchBar.js","Components/Loader.js","Components/ImageGalleryItem.js","Components/ImageGallery.js","services/galleryAPI.js","Components/Button.js","Components/Modal.js","App.js","index.js"],"names":["SearchBar","state","searchQuerry","handleChangeQuerry","e","setState","target","value","handleSubmit","preventDefault","props","onSearch","this","className","onSubmit","type","autoComplete","autoFocus","placeholder","onChange","Component","Loader","ImageGalleryItem","imgUrl","largeImgUrl","onOpenModal","src","alt","onClick","data-url","ImageGallery","images","map","img","webformatURL","largeImageURL","id","key","fetchImagesByQuerry","querry","page","axios","get","then","res","data","hits","Button","Modal","closeModalByKey","code","Onclose","closeModal","classList","contains","window","addEventListener","removeEventListener","children","App","loading","modal","largeImageUrl","fetchImages","error","prevState","catch","finally","handleSearch","showModal","dataset","url","console","log","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4fd7b05b.chunk.js","sourcesContent":["import { Component } from \"react\";\r\n\r\nexport default class SearchBar extends Component {\r\n  state = {\r\n    searchQuerry: \"\",\r\n  };\r\n\r\n  handleChangeQuerry = (e) => {\r\n    this.setState({ searchQuerry: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSearch(this.state.searchQuerry);\r\n  };\r\n\r\n  render() {\r\n    const { searchQuerry } = this.state;\r\n    return (\r\n      <div>\r\n        <header className=\"Searchbar\">\r\n          <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n            <button type=\"submit\" className=\"SearchForm-button\">\r\n              <span className=\"SearchForm-button-label\">Search</span>\r\n            </button>\r\n\r\n            <input\r\n              className=\"SearchForm-input\"\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n              value={searchQuerry}\r\n              onChange={this.handleChangeQuerry}\r\n            />\r\n          </form>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Spinner from \"react-loader-spinner\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <div>\r\n      <Spinner type=\"ThreeDots\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ImageGalleryItem({imgUrl, largeImgUrl, onOpenModal}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img src={imgUrl} alt=\"\" className=\"ImageGalleryItem-image\" onClick={onOpenModal} data-url={largeImgUrl}/>\r\n    </li>\r\n  );\r\n}\r\n// ImageGalleryItem.propTypes = {\r\n//   imgUrl: PropTypes.string.isRequried,\r\n//   largeimgUrl: PropTypes.string.isRequried,\r\n// };\r\n","import propTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nexport default function ImageGallery({ images, onOpenModal }) {\r\n  return (\r\n    <div>\r\n      <ul className=\"ImageGallery\">\r\n        {images.map((img) => (\r\n          <ImageGalleryItem\r\n            key={img.id}\r\n            imgUrl={img.webformatURL}\r\n            largeImgUrl={img.largeImageURL}\r\n            onOpenModal={onOpenModal}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ImageGallery.propTypes = {\r\n//   images: propTypes.array.isRequired,\r\n// };\r\n","import axios from \"axios\";\r\n\r\nconst key = \"19312223-5ce613f0baa18ae84872c00fc\";\r\n\r\nexport function fetchImagesByQuerry(querry, page = 1) {\r\n  return axios.get(`https://pixabay.com/api/?q=${querry}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12\r\n`).then((res) => res.data.hits)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Button({ onClick }) {\r\n    return (\r\n        <button type='button' className='Button' onClick={onClick}>\r\n            Load more\r\n        </button>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.closeModalByKey);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.closeModalByKey);\r\n  }\r\n\r\n  closeModalByKey = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.Onclose();\r\n    }\r\n  };\r\n\r\n  closeModal = (e) => {\r\n    if (e.target.classList.contains(\"Overlay\")) {\r\n      this.props.Onclose();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.closeModal}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport SearchBar from \"./Components/SearchBar\";\nimport Loader from \"./Components/Loader\";\nimport ImageGallery from \"./Components/ImageGallery\";\nimport { fetchImagesByQuerry } from \"./services/galleryAPI\";\nimport Button from \"./Components/Button\";\nimport Modal from \"./Components/Modal\";\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    querry: \"\",\n    loading: false,\n    page: 1,\n    modal: false,\n    largeImageUrl: \"\",\n  };\n\n\ncomponentDidUpdate(prevProps, prevState) {\n  if (this.state.images !== prevState.images) {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n\n  }\n}\n\n\n  fetchImages = () => {\n    this.setState({ loading: true, error: null });\n    fetchImagesByQuerry(this.state.querry, this.state.page)\n      .then((res) =>\n        this.setState((prevState) => {\n          return {\n            images: [...prevState.images, ...res],\n            page: prevState.page + 1,\n          };\n        })\n      )\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  handleSearch = (searchQuerry) => {\n    this.setState(\n      { querry: searchQuerry, images: [], page: 1 },\n      this.fetchImages\n    );\n  };\n\ncloseModal = (e) => {\n  this.setState({ modal: false, largeImageUrl: '' });\n\n}\n\n  showModal = (e) => {\n    const imgUrl = e.target.dataset.url;\nconsole.log(e.target.dataset)\n    this.setState({ modal: true, largeImageUrl: imgUrl });\n  };\n\n  render() {\n    const { images, modal, largeImageUrl } = this.state;\n    return (\n      <div className=\"App\">\n        <SearchBar onSearch={this.handleSearch} />\n        {this.error && <h3>Error</h3>}\n        {this.state.loading && <Loader />}\n        {modal && (\n          <Modal Onclose={this.closeModal}>\n            <img src={largeImageUrl} alt=''/>\n          </Modal>\n        )}\n        <ImageGallery images={images} onOpenModal={this.showModal} />\n        {images.length > 0 ? <Button onClick={this.fetchImages} /> : null}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}