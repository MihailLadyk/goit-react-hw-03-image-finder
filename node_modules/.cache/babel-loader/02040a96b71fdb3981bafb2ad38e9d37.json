{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Misha\\\\Desktop\\\\Code\\\\React\\\\LessonFolders\\\\gallery\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport SearchBar from \"./Components/SearchBar\";\nimport Loader from \"./Components/Loader\";\nimport ImageGallery from \"./Components/ImageGallery\";\nimport { fetchImagesByQuerry } from \"./services/galleryAPI\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [],\n      querry: \"\",\n      loading: false\n    };\n\n    this.fetchImages = () => {\n      this.setState({\n        loading: true\n      });\n      fetchImagesByQuerry(this.state.querry, 1).then(res => this.setState({\n        images: res\n      })).catch(error => this.setState).finally(() => this.setState({\n        loading: false\n      }));\n    };\n\n    this.handleSearch = searchQuerry => {\n      this.setState({\n        querry: searchQuerry\n      }, this.fetchImages);\n    };\n  }\n\n  render() {\n    const {\n      images\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: this.handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), this.state.loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Misha/Desktop/Code/React/LessonFolders/gallery/src/App.js"],"names":["React","Component","SearchBar","Loader","ImageGallery","fetchImagesByQuerry","App","state","images","querry","loading","fetchImages","setState","then","res","catch","error","finally","handleSearch","searchQuerry","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,eAAe,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACzCM,KADyC,GACjC;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,OAAO,EAAE;AAHH,KADiC;;AAAA,SAOzCC,WAPyC,GAO3B,MAAM;AACtB,WAAKC,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE;AAAV,OAAd;AACIL,MAAAA,mBAAmB,CAAC,KAAKE,KAAL,CAAWE,MAAZ,EAAoB,CAApB,CAAnB,CAA0CI,IAA1C,CAAgDC,GAAD,IAC7C,KAAKF,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEM;AAAV,OAAd,CADF,EAEEC,KAFF,CAESC,KAAD,IAAW,KAAKJ,QAFxB,EAGCK,OAHD,CAGS,MAAM,KAAKL,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE;AAAV,OAAd,CAHf;AAID,KAbwC;;AAAA,SAezCQ,YAfyC,GAezBC,YAAD,IAAkB;AAC/B,WAAKP,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEU;AAAV,OAAd,EACE,KAAKR,WADP;AAED,KAlBwC;AAAA;;AAoBzCS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKW;AAA1B;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKX,KAAL,CAAWG,OAAX,iBAAsB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFzB,eAGE,QAAC,YAAD;AAAc,QAAA,MAAM,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA7BwC","sourcesContent":["import React, { Component } from \"react\";\nimport SearchBar from \"./Components/SearchBar\";\nimport Loader from \"./Components/Loader\";\nimport ImageGallery from \"./Components/ImageGallery\";\nimport { fetchImagesByQuerry } from \"./services/galleryAPI\";\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    querry: \"\",\n    loading: false\n  };\n\n  fetchImages = () => {\nthis.setState({loading: true})\n    fetchImagesByQuerry(this.state.querry, 1).then((res) =>\n      this.setState({ images: res })\n    ).catch((error) => this.setState)\n    .finally(() => this.setState({loading: false}))\n  };\n\n  handleSearch = (searchQuerry) => {\n    this.setState({ querry: searchQuerry },\n      this.fetchImages);\n  };\n\n  render() {\n    const { images } = this.state;\n    return (\n      <div className=\"App\">\n        <SearchBar onSearch={this.handleSearch} /> \n        {this.state.loading && <Loader />}\n        <ImageGallery images={images} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}